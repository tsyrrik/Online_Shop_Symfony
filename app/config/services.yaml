# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Domain\Product\Repository\ProductRepositoryInterface:
        alias: App\Infrastructure\Repository\InMemoryProductRepository

    App\Domain\Cart\Repository\CartRepositoryInterface:
        alias: App\Infrastructure\Repository\InMemoryCartRepository

    App\Domain\User\Repository\UserRepositoryInterface:
        alias: App\Infrastructure\Repository\UserRepository

    RdKafka\Conf:
        calls:
            - [set, ['metadata.broker.list', 'kafka:9092']]

    RdKafka\Producer:
        arguments:
            - '@RdKafka\Conf'

    App\Application\Service\ReportService:
        arguments:
            - '@App\Domain\Cart\Repository\CartRepositoryInterface'
            - '@Symfony\Component\Filesystem\Filesystem'
            - '@RdKafka\Producer'

    App\Infrastructure\Api\Controller\ReportController:
        arguments:
            - '@RdKafka\Producer'

    App\Application\Handler\AddToCartHandler:
        arguments:
            $productRepository: '@App\Domain\Product\Repository\ProductRepositoryInterface'
            $cartRepository: '@App\Domain\Cart\Repository\CartRepositoryInterface'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
