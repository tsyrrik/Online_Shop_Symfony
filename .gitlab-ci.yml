stages:
  - build
  - test
  - deploy
  # - dast

include:
  - template: Jobs/Container-Scanning.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Jobs/SAST-IaC.gitlab-ci.yml
  # - template: Security/DAST.gitlab-ci.yml
  # - template: Security/API-Security.gitlab-ci.yml

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

build-job: 
  stage: build
  image: composer:latest
  script:
    - composer install --prefer-dist --no-interaction
  artifacts:
    paths:
      - vendor/

phpunit:
  stage: test
  image: php:8.2
  variables:
    APP_ENV: test
  script:
    - ./vendor/bin/phpunit

cs:
  stage: test
  image: php:8.2
  script:
    - ./vendor/bin/php-cs-fixer fix src --dry-run --stop-on-violation

composer:
  stage: test
  image: composer:latest
  script:
    - composer normalize --diff --dry-run
    - composer validate
    - vendor/bin/composer-require-checker check --config-file=composer-require-checker.json
    #- php8.2 vendor/bin/composer-unused
    - composer audit

di:
  stage: test
  image: php:8.2
  script:
    - bin/console cache:clear --env=prod
    - bin/console lint:container --env=prod

rector:
  stage: test
  image: composer:latest
  script:
    - vendor/rector/rector/bin/rector --dry-run

schema-validate:
  stage: test
  image: composer:latest
  script:
    - bin/console doctrine:schema:validate --skip-sync

deptrac:
  stage: test
  image: composer:latest
  script:
    - vendor/bin/deptrac --config-file=deptrac.modules.yaml --cache-file=var/.deptrac.modules.cache
    - vendor/bin/deptrac --config-file=deptrac.yaml --cache-file=var/.deptrac.cache

# psalm:   #пока отключил
#   stage: test
#   image: composer:latest
#   script:
#     - vendor/vimeo/psalm/psalm

deploy-job:
  stage: deploy
  environment: production
  only:
    - master
  script:
    - echo "Deploying the application..."
    - echo "Application successfully deployed."