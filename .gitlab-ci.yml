# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - quality
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

build-job:
  stage: build
  image: composer:latest
  script:
    - composer install --prefer-dist --no-interaction
  artifacts:
    paths:
      - vendor/

# Можно добавить несколько отдельных job-ов в стадии test, например, для юнит-тестов и для статического анализа кода
phpunit-test-job:
  stage: quality
  image: php:8.2
  variables:
    # Если нужно, указываем окружение. Для Symfony может потребоваться APP_ENV=test
    APP_ENV: test
  script:
    - ./vendor/bin/phpunit
    # при необходимости можно запустить функциональные тесты:
    # - ./vendor/bin/phpunit --testsuite=Functional
php-css:
  stage: quality
  image: php:8.2
  script:
    - ./vendor/bin/php-cs-fixer fix src --dry-run --stop-on-violation
    

# Деплой. Может потребоваться SSH-доступ или деплой через Docker, Kubernetes и т.д.
deploy-job:
  stage: deploy
  environment: production
  only:
    - master   # или любая другая ветка, с которой вы деплоите (master, production и пр.)
  script:
    - echo "Deploying the application..."
    # Пример: копирование артефактов или выполнение команд на сервере
    # - scp -r . user@your-server.com:/var/www/your-project
    # - ssh user@your-server.com 'cd /var/www/your-project && php bin/console cache:clear --env=prod'
    - echo "Application successfully deployed."