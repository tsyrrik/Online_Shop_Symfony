version: '3.8'

services:
  app:
    build:
      dockerfile: ./.docker/dev/Dockerfile
    volumes:
      - .:/var/www/html
    ports:
      - "9001:9000"
    networks:
      - app-network
    depends_on:
      - kafka

  webserver:
    image: nginx:alpine
    volumes:
      - .:/var/www/html
      - './docker/conf/nginx:/etc/nginx/conf.d'
    ports:
      - "8080:80"
    networks:
      - app-network

  db:
    image: postgres:16.6
    environment:
      POSTGRES_DB: online_shop_db
      POSTGRES_USER: user_db
      POSTGRES_PASSWORD: 123
    volumes:
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "54323:5432"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka"
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9900:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092"
    depends_on:
      - kafka
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
